version: '3.7'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    hostname: es01
    deploy:
      placement:
        constraints:
          - node.labels.type == master
          - node.labels.AZ == AZ1
    env_file:
      - .env
    environment:
      - node.name=es01
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - node.master=true
      - node.ingest=false
      - node.data=false
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.keystore.path=es01.p12
      - xpack.security.transport.ssl.truststore.path=es01.p12
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.keystore.path=es01.p12
      - xpack.security.http.ssl.truststore.path=es01.p12
      - xpack.security.enabled=true
      - xpack.monitoring.collection.enabled=true
    volumes:
      - esdata01:/usr/share/elasticsearch/data
      - ./*.p12:/usr/share/elasticsearch/config/es01.p12
    networks:
      - esnet
    healthcheck:
      test: ["CMD","curl","-s","-k","-u","elastic:$ELASTIC_PASSWORD","https://localhost:9200/_cluster/health?wait_for_status=green"]
      interval: 60s
      timeout: 50s
      retries: 5
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    hostname: es02
    deploy:
      placement:
        constraints:
          - node.labels.type == data
          - node.labels.AZ == AZ1
    env_file:
      - .env
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms24g -Xmx24g"
      - node.master=false
      - node.ingest=false
      - node.data=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.keystore.path=es02.p12
      - xpack.security.transport.ssl.truststore.path=es02.p12
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.keystore.path=es02.p12
      - xpack.security.http.ssl.truststore.path=es02.p12
      - xpack.security.enabled=true
      - xpack.monitoring.collection.enabled=true
    volumes:
      - esdata02:/usr/share/elasticsearch/data
      - ./*.p12:/usr/share/elasticsearch/config/es02.p12
    networks:
      - esnet
    healthcheck:
      test: ["CMD","curl","-s","-k","-u","elastic:$ELASTIC_PASSWORD","https://localhost:9200/_cluster/health?wait_for_status=green"]
      interval: 60s
      timeout: 50s
      retries: 5
  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    hostname: es03
    deploy:
      placement:
        constraints:
          - node.labels.type == data
          - node.labels.AZ == AZ2
    env_file:
      - .env
    environment:
      - node.name=es03
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms24g -Xmx24g"
      - node.master=false
      - node.ingest=false
      - node.data=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.keystore.path=es03.p12
      - xpack.security.transport.ssl.truststore.path=es03.p12
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.keystore.path=es03.p12
      - xpack.security.http.ssl.truststore.path=es03.p12
      - xpack.security.enabled=true
      - xpack.monitoring.collection.enabled=true
    volumes:
      - esdata02:/usr/share/elasticsearch/data
      - ./*.p12:/usr/share/elasticsearch/config/es03.p12
    networks:
      - esnet
    healthcheck:
      test: ["CMD","curl","-s","-k","-u","elastic:$ELASTIC_PASSWORD","https://localhost:9200/_cluster/health?wait_for_status=green"]
      interval: 60s
      timeout: 50s
      retries: 5
  kibana:
    image: docker.elastic.co/kibana/kibana:7.3.0
    hostname: ki01
    deploy:
      placement:
        constraints:
          - node.labels.type == master
          - node.labels.AZ == AZ1
    env_file:
      - .env
    ports:
      - target: 5601
        published: 443
        protocol: tcp
        mode: host
    environment:
      - SERVER_HOST="0.0.0.0"
      - ELASTICSEARCH_HOSTS="https://es01:9200"
      - ELASTICSEARCH_USERNAME="kibana"
      - XPACK_SECURITY_SESSIONTIMEOUT="43200000"
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
      - ./*.crt:/usr/share/kibana/kibana.crt
      - /*.key:/usr/share/kibana/kibana.key
      - /*.pem:/usr/share/kibana/ca.pem
    networks:
      - esnet
  logstash:
    image: docker.elastic.co/logstash/logstash:7.3.0
    hostname: ls01
    deploy:
      placement:
        constraints:
          - node.labels.type == master
          - node.labels.AZ == AZ1
    env_file:
      - .env
    ports:
      - target: 5044
        published: 5044
        protocol: tcp
        mode: host
      - target: 9600
        published: 9600
        protocol: tcp
        mode: host
    environment:
      - XPACK_MONITORING_ENABLED=false
    volumes:
      - ./cep.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./*.p12:/etc/logstash/server.p12
      - ./*.pem:/etc/logstash/ca.pem
    networks:
      - esnet
    healthcheck:
      test: bin/logstash -t
      interval: 60s
      timeout: 50s
      retries: 5
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - esnet

volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local
  esdata03:
    driver: local

networks:
  esnet:
